#!/usr/bin/perl
#use strict;
use diagnostics;
use English;

my @stack;
my @postfix;
my @infix;

my $precision = 20;
$precision = ($precision > 16 ? 16 : $precision);

%precedence = (
	'+' => 0,
	'-' => 0,
	'*' => 1,
	'/' => 1,
	'^' => 2,
);

$_=$ARGV[0];
#$_="a+b*c-d";
#([\d\w]+)

print keys(%precedence);

#$_=~qr/([$tomatch])/;
print $MATCH;


#@infix = split(/(\d+.?\d*)/);
#print "@infix";



#foreach $var(@infix){
#	#print "$var\t @stack\n";
#	if(exists $precedence{$var}){
#		#print "$#stack\t$precedence{$var}\t$precedence{$#stack}\n";
#		while(($#stack >= 0) && ($precedence{$var} <= $precedence{$stack[-1]})){
#			push(@postfix, pop(@stack));
#		}
#		push(@stack, $var);
#	}else{
#		push(@postfix,$var);
#	}
#}
#
#while($#stack >= 0){
#	push(@postfix,pop(@stack));
#}
#
##print "@postfix\n";
#
#
#foreach $var(@postfix){
#	if(exists $precedence{$var}){
#		$operand2 = pop @stack;
#		$operand1 = pop @stack;
#		
#		$result = $operand1 + $operand2 if ($var eq '+');
#		$result = $operand1 - $operand2 if ($var eq '-');
#		$result = $operand1 * $operand2 if ($var eq '*');
#		$result = $operand1 / $operand2 if ($var eq '/');
#		$result = $operand1 ** $operand2 if ($var eq '^');
#		
#		push(@stack,$result);
#	}else{
#		push(@stack,$var);
#	}
#}
#
#printf("%s = %.${precision}f\n",$ARGV[0],$stack[0]);
